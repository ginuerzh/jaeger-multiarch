# ref: https://github.com/crazy-max/diun/blob/master/.github/workflows/build.yml

name: build

on: 
  push:
    tags: v*

jobs:
  build-jaeger-collector:
    runs-on: ubuntu-18.04
    steps:
    - name: Prepare
      id: prepare
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          echo ::set-output name=version::${GITHUB_REF#refs/tags/v}
        fi

        echo ::set-output name=docker_image::${{ secrets.DOCKER_USERNAME }}/jaeger-collector
        echo ::set-output name=docker_platforms::linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/386

      # https://github.com/crazy-max/ghaction-docker-buildx
    - name: Set up Docker Buildx
      id: buildx
      uses: crazy-max/ghaction-docker-buildx@v1
      with:
        version: latest

    - name: Environment
      run: |
        echo home=$HOME
        echo git_ref=$GITHUB_REF
        echo git_sha=$GITHUB_SHA
        echo version=${{ steps.prepare.outputs.version }}
        echo image=${{ steps.prepare.outputs.docker_image }}
        echo platforms=${{ steps.prepare.outputs.docker_platforms }}
        echo avail_platforms=${{ steps.buildx.outputs.platforms }}

      # https://github.com/actions/checkout
    - name: Checkout
      uses: actions/checkout@v2

    - name: Docker Login
      if: success()
      env:
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        echo "${DOCKER_PASSWORD}" | docker login --username "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Docker Buildx (push)
      if: success()
      run: |
        docker buildx build \
          --platform ${{ steps.prepare.outputs.docker_platforms }} \
          --output "type=image,push=true" \
          --build-arg "TAG_NAME=v${{ steps.prepare.outputs.version }}" \
          --tag "${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }}" \
          --tag "${{ steps.prepare.outputs.docker_image }}:latest" \
          --file Dockerfile.collector .

    - name: Clear
      if: always()
      run: |
        rm -f ${HOME}/.docker/config.json

  build-jaeger-agent:
    runs-on: ubuntu-18.04
    steps:
    - name: Prepare
      id: prepare
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          echo ::set-output name=version::${GITHUB_REF#refs/tags/v}
        fi

        echo ::set-output name=docker_image::${{ secrets.DOCKER_USERNAME }}/jaeger-agent
        echo ::set-output name=docker_platforms::linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/386

      # https://github.com/crazy-max/ghaction-docker-buildx
    - name: Set up Docker Buildx
      id: buildx
      uses: crazy-max/ghaction-docker-buildx@v1
      with:
        version: latest

    - name: Environment
      run: |
        echo home=$HOME
        echo git_ref=$GITHUB_REF
        echo git_sha=$GITHUB_SHA
        echo version=${{ steps.prepare.outputs.version }}
        echo image=${{ steps.prepare.outputs.docker_image }}
        echo platforms=${{ steps.prepare.outputs.docker_platforms }}
        echo avail_platforms=${{ steps.buildx.outputs.platforms }}

      # https://github.com/actions/checkout
    - name: Checkout
      uses: actions/checkout@v2

    - name: Docker Login
      if: success()
      env:
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        echo "${DOCKER_PASSWORD}" | docker login --username "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Docker Buildx (push)
      if: success()
      run: |
        docker buildx build \
          --platform ${{ steps.prepare.outputs.docker_platforms }} \
          --output "type=image,push=true" \
          --build-arg "TAG_NAME=v${{ steps.prepare.outputs.version }}" \
          --tag "${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }}" \
          --tag "${{ steps.prepare.outputs.docker_image }}:latest" \
          --file Dockerfile.agent .

    - name: Clear
      if: always()
      run: |
        rm -f ${HOME}/.docker/config.json

  build-jaeger-query:
    runs-on: ubuntu-18.04
    steps:
    - name: Prepare
      id: prepare
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          echo ::set-output name=version::${GITHUB_REF#refs/tags/v}
        fi

        echo ::set-output name=docker_image::${{ secrets.DOCKER_USERNAME }}/jaeger-query
        echo ::set-output name=docker_platforms::linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/386

      # https://github.com/crazy-max/ghaction-docker-buildx
    - name: Set up Docker Buildx
      id: buildx
      uses: crazy-max/ghaction-docker-buildx@v1
      with:
        version: latest

    - name: Environment
      run: |
        echo home=$HOME
        echo git_ref=$GITHUB_REF
        echo git_sha=$GITHUB_SHA
        echo version=${{ steps.prepare.outputs.version }}
        echo image=${{ steps.prepare.outputs.docker_image }}
        echo platforms=${{ steps.prepare.outputs.docker_platforms }}
        echo avail_platforms=${{ steps.buildx.outputs.platforms }}

      # https://github.com/actions/checkout
    - name: Checkout
      uses: actions/checkout@v2

    - name: Docker Login
      if: success()
      env:
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        echo "${DOCKER_PASSWORD}" | docker login --username "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Docker Buildx (push)
      if: success()
      run: |
        docker buildx build \
          --platform ${{ steps.prepare.outputs.docker_platforms }} \
          --output "type=image,push=true" \
          --build-arg "TAG_NAME=v${{ steps.prepare.outputs.version }}" \
          --tag "${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }}" \
          --tag "${{ steps.prepare.outputs.docker_image }}:latest" \
          --file Dockerfile.query .

    - name: Clear
      if: always()
      run: |
        rm -f ${HOME}/.docker/config.json

  build-jaeger-all-in-one:
    runs-on: ubuntu-18.04
    steps:
    - name: Prepare
      id: prepare
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          echo ::set-output name=version::${GITHUB_REF#refs/tags/v}
        fi

        echo ::set-output name=docker_image::${{ secrets.DOCKER_USERNAME }}/jaeger-all-in-one
        echo ::set-output name=docker_platforms::linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/386

      # https://github.com/crazy-max/ghaction-docker-buildx
    - name: Set up Docker Buildx
      id: buildx
      uses: crazy-max/ghaction-docker-buildx@v1
      with:
        version: latest

    - name: Environment
      run: |
        echo home=$HOME
        echo git_ref=$GITHUB_REF
        echo git_sha=$GITHUB_SHA
        echo version=${{ steps.prepare.outputs.version }}
        echo image=${{ steps.prepare.outputs.docker_image }}
        echo platforms=${{ steps.prepare.outputs.docker_platforms }}
        echo avail_platforms=${{ steps.buildx.outputs.platforms }}

      # https://github.com/actions/checkout
    - name: Checkout
      uses: actions/checkout@v2

    - name: Docker Login
      if: success()
      env:
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        echo "${DOCKER_PASSWORD}" | docker login --username "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Docker Buildx (push)
      if: success()
      run: |
        docker buildx build \
          --platform ${{ steps.prepare.outputs.docker_platforms }} \
          --output "type=image,push=true" \
          --build-arg "TAG_NAME=v${{ steps.prepare.outputs.version }}" \
          --tag "${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }}" \
          --tag "${{ steps.prepare.outputs.docker_image }}:latest" \
          --file Dockerfile.allinone .

    - name: Clear
      if: always()
      run: |
        rm -f ${HOME}/.docker/config.json
